name: D1 → state-links.json (export)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  export:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install wrangler
        run: npm i -g wrangler

      # Apply our migrations explicitly (repo keeps them in db/migrations/)
      - name: Apply migrations (001, 002)
        run: |
          wrangler d1 execute medportal_db --remote --file db/migrations/001_harden_states.sql
          wrangler d1 execute medportal_db --remote --file db/migrations/002_boards.sql

      # (First run only) Seed 'boards' from the current JSON file checked into the repo
      # You can leave this step enabled; it simply replaces boards each push based on your JSON.
      - name: Seed boards from JSON
        run: node scripts/seed-boards-from-json.mjs

      # Export D1 → JSON (authoritative)
      - name: Export D1 → public/assets/state-links.json
        run: node scripts/export-state-links-from-d1.mjs

      # Validate JSON shape
      - name: Validate exported JSON
        run: node scripts/validate-state-links.mjs

      # Commit only if the exported file changed
      - name: Commit exported JSON (if changed)
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git add public/assets/state-links.json
            git commit -m "chore(export): D1 → state-links.json [skip ci]"
            git push
          else
            echo "No changes."
          fi
