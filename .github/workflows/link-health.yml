name: Link Health 2.0

on:
  workflow_dispatch: {}
  schedule:
    - cron: "21 5 * * *" # daily @ 05:21 UTC
  push:
    paths:
      - "public/assets/state-links.json"
      - "public/assets/references.json"
      - ".github/workflows/link-health.yml"
      - ".lychee.toml"
      - ".lycheeignore"
      - "scripts/verify-state-links.mjs"
      - "public/**/*.html"

permissions:
  contents: read

jobs:
  link-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ----- A) General link audit (Lychee) -----
      - name: Run lychee (external link audit)
        id: lychee
        uses: lycheeverse/lychee-action@v1.8.0
        continue-on-error: true
        with:
          args: >
            --config .lychee.toml
            --verbose
            --format markdown
            --output reports/lychee.md
            public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build combined report (header + lychee)
        run: |
          mkdir -p reports
          echo "### Lychee Summary" > reports/link-health.md
          echo "" >> reports/link-health.md
          if [ -f reports/lychee.md ]; then
            cat reports/lychee.md >> reports/link-health.md
          else
            echo "_Lychee did not produce an output file._" >> reports/link-health.md
          fi
          echo "" >> reports/link-health.md

      # ----- B) State landing host verifier -----
      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Verify state links (follow redirects, validate final host)
        id: states
        continue-on-error: true
        run: |
          node scripts/verify-state-links.mjs >> reports/link-health.md

      # ----- Always upload the report -----
      - name: Upload report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: link-health-report
          path: reports/link-health.md
          retention-days: 14

      # ----- Decide overall result -----
      - name: Fail if there were hard errors
        if: always()
        run: |
          echo "Lychee step:  ${{ steps.lychee.outcome }}"
          echo "States step:  ${{ steps.states.outcome }}"
          if [ "${{ steps.lychee.outcome }}" != "success" ] || [ "${{ steps.states.outcome }}" != "success" ]; then
            echo "Failing due to hard errors reported above."
            exit 1
          fi
